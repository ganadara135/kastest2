{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.//.*//src//index/.js$","services/local-storage.js","containers/Login.js","containers/Register.js","auth/Auth.js","api/KasApi.js","reducers/reducerAccountList.js","containers/AccountList.js","containers/AccountInfo.js","containers/ValueTransfer.js","main/klaytn.svg","main/Main.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","setItem","key","value","localStorage","Login","history","useHistory","className","align","span","offset","name","initialValues","remember","onFinish","values","JSON","stringify","setTimeout","push","onFinishFailed","error","console","log","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","to","Register","errorInfo","Auth","style","width","height","path","component","getAccountListApi","a","process","caver","CaverExtKAS","initKASAPI","query","size","kas","wallet","getAccountList","result","items","fetchAccountList","fetchAccountListSaga","initialState","address","chainId","createdAt","keyId","krn","publicKey","FETCHLIST","FETCHLIST_SUCCESS","FETCHLIST_ERROR","action","delay","call","kasApi","returnVal","put","payload","takeLatest","reducerAccountList","state","tempArr","Array","forEach","cur","idx","columns_table","title","dataIndex","render","text","ellipsis","AccountList","useState","dataTableRedux","useSelector","dispatch","useDispatch","useEffect","columns","dataSource","AccountInfo","accessKeyId","secretAccessKey","tempVarArr2","dataTable","setDataTable","tempVarArr","el","i","rpc","klay","getAccount","balanceVal","balance","account","length","tempFunc","ValueTransfer","from","gas","gasPrice","nonce","transactionHash","tempData","setTempData","tx","fromAddress","toAddress","klayValue","submit","requestValueTransfer","Text","mark","Header","Layout","Sider","Content","Footer","parse","getItem","user","collapsed","setCollapsed","replace","toggle","justify","gutter","xl","src","logoSvg","alt","border","Icon","trigger","collapsible","DownOutlined","theme","mode","defaultSelectedKeys","icon","BarsOutlined","BankOutlined","AccountBookOutlined","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","margin","minHeight","indicator","LoadingOutlined","fontSize","spin","App","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","reduxLogger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e289a374.chunk.js","sourcesContent":["var map = {\n\t\"./caver-abi/src/index.js\": 192,\n\t\"./caver-account/src/index.js\": 94,\n\t\"./caver-contract/src/index.js\": 120,\n\t\"./caver-core-helpers/src/index.js\": 45,\n\t\"./caver-core-method/src/index.js\": 87,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 398,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 402,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 397,\n\t\"./caver-core-requestmanager/src/index.js\": 394,\n\t\"./caver-core-subscriptions/src/index.js\": 172,\n\t\"./caver-core/src/index.js\": 68,\n\t\"./caver-ipfs/src/index.js\": 420,\n\t\"./caver-kct/src/index.js\": 433,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 436,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 439,\n\t\"./caver-klay/src/index.js\": 440,\n\t\"./caver-middleware/src/index.js\": 269,\n\t\"./caver-net/src/index.js\": 287,\n\t\"./caver-rpc/src/index.js\": 441,\n\t\"./caver-rtm/src/index.js\": 175,\n\t\"./caver-transaction/src/index.js\": 442,\n\t\"./caver-utils/iban/src/index.js\": 389,\n\t\"./caver-utils/promievent/src/index.js\": 388,\n\t\"./caver-utils/src/index.js\": 15,\n\t\"./caver-validator/src/index.js\": 288,\n\t\"./caver-wallet/src/index.js\": 280\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 689;","export const setItem = (key, value) => localStorage.setItem(key, value);\nexport const getItem = key => localStorage.getItem(key);","import React from 'react';\nimport { Row, Col, Form, Input, Button, Checkbox } from 'antd';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nimport { setItem } from '../services/local-storage';\n\nexport default function Login() {\n  const history = useHistory();\n  \n  const onFinish = (values) => {\n    setItem(\"user\", JSON.stringify(values));\n    setTimeout(() => {\n      history.push('/main/AccountList');\n    }, 1000)\n  };\n\n  const onFinishFailed = (error) => {\n    console.log('Failed:', error);\n  };\n\n  return (\n    <div className=\"Login\">\n      <Row align=\"middle\" className=\"login-form\">\n        <Col span={6} offset={8}>\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Username!',\n                },\n              ]}\n            >\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Password!',\n                },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n            {/* <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n\n              <Link className=\"login-form-forgot\">\n                Forgot password\n              </Link>\n            </Form.Item> */}\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Log in\n        </Button>\n        Or <Link to=\"/auth/register\"> 회원가입(첫사용 시 회원가입후 사용)</Link>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};","import React from 'react';\nimport { Row, Col, Form, Input, Button, Checkbox } from 'antd';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nimport { setItem } from '../services/local-storage';\n\nexport default function Register() {\n  const history = useHistory();\n\n  const onFinish = (values) => {\n    setItem(\"user\", JSON.stringify(values));\n    setTimeout(() => {\n      history.push('/main/dashboard');\n    }, 1000)\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className=\"Register\">\n      <Row align=\"middle\" className=\"register-form\">\n        <Col span={6} offset={8}>\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Username!',\n                },\n              ]}\n            >\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Password!',\n                },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n            {/* <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n\n              <Link className=\"login-form-forgot\">\n                Forgot password\n              </Link>\n            </Form.Item> */}\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                회원가입\n              </Button>\n              Or <Link to=\"/auth/login\">Already have an account!</Link>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};","import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Login from '../containers/Login';\nimport Register from '../containers/Register';\n\nexport default function Auth() {\n  return (\n    <div style={{ width: '100%', height: '100vh' }}>\n      <Switch>\n        <Route path=\"/auth/login\" component={Login} />\n        <Route path=\"/auth/register\" component={Register} />\n        <Redirect to=\"/main\" />\n      </Switch>\n    </div>\n  )\n}\n","import CaverExtKAS from \"caver-js-ext-kas\";\n\nexport const getAccountListApi = async () => {\n\n    const accessKeyId = process.env.REACT_APP_ACCESS_KEY;\n    const secretAccessKey = process.env.REACT_APP_SECRET_ACCESS_KEY;\n    const chainId = process.env.REACT_APP_CHAIN_ID;\n    const caver = new CaverExtKAS();\n    caver.initKASAPI(chainId, accessKeyId, secretAccessKey)\n    const query = {\n        size: 10,   \n    }\n    const result = await caver.kas.wallet.getAccountList(query)\n    console.log(\"async call dispatch : \");\n    console.log(result.items);\n\n    return result.items;\n}\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from 'immer';\nimport { call, delay, put, takeEvery, takeLatest, take } from 'redux-saga/effects'\n\nimport * as kasApi from '../api/KasApi'\n\n\n//////////////////////////\n//  States & Variables\nconst initialState = [{\n    key : -1,\n    address : '',\n    chainId : '',\n    createdAt : '',\n    keyId : '',\n    krn : '',\n    publicKey : '',\n}];\n\n///////////////////////////\n// Action Types\nconst FETCHLIST = 'LIST/FETCH';\nconst FETCHLIST_SUCCESS = 'LIST/FETCH_SUCCESS';\nconst FETCHLIST_ERROR = 'LIST/FETCH_ERROR';\n\n////////////////////\n// Action Creators\nexport const fetchAccountListAction = () => ({type : FETCHLIST });\n// export const fetchAccountList = createAction(FETCHLIST, data => data);\n// export async function fetchAccountList() {\n//     const accessKeyId = process.env.REACT_APP_ACCESS_KEY;\n//     const secretAccessKey = process.env.REACT_APP_SECRET_ACCESS_KEY;\n//     const chainId = process.env.REACT_APP_CHAIN_ID;\n//     const caver = new CaverExtKAS()\n    \n//     caver.initKASAPI(chainId, accessKeyId, secretAccessKey)\n//     const query = {\n//         size: 10,   \n//       }\n//       const result = await caver.kas.wallet.getAccountList(query)\n//       console.log(\"async call dispatch : \");\n//       console.log(result);\n//     return {\n//         type : FETCHLIST,\n//     }\n// }\n// export function generateWalletSucces(seed, password) {\n//     return {\n//       type: GENERATE_WALLET_SUCCESS,\n//       seed,\n//       password,\n//     };\n//   }\n\n/////////////////////////////////\n// Saga 구현\nfunction* fetchAccountList(action) {\n    yield delay(100);\n    // yield put(fetchAccountListAction());    // put 는 dispatch 호출해줌\n    console.log(\"action : \", action)\n       \n\n    try {\n        const returnVal = yield call(kasApi.getAccountListApi)\n        \n        yield put({\n            type : FETCHLIST_SUCCESS,\n            payload : returnVal\n        })\n    } catch (e) {\n        yield put ({\n            type : FETCHLIST_ERROR,\n            error : true,\n            payload : e\n        })\n    }\n}\n\n\nexport function* fetchAccountListSaga() {\n    // yield takeLatest(FETCHLIST, fetchAccountListSaga);\n    yield takeLatest(FETCHLIST, fetchAccountList);\n}\n\n///////////////////////\n// Reducer\n// const reducerAccountList = handleActions( \n//     // console.log(\" call reducerAccountList HandleActions \"),\n// {    \n//     [FETCHLIST] : (state, action ) =>\n//     produce(state, draft => {\n//         draft.data = \"aaaaa\";\n//     }),\n//     // [FETCHLIST] : (state, {payload : data}) =>\n//     // produce(state, draft => {\n//     //     draft.data = \"aaaaa\";\n//     // }),\n// }, initialState,);\n\nconst reducerAccountList = (state = initialState, action ) => {\n    console.log(\"in reducerAccountList\")\n    console.log(state)\n    console.log('action.type : ', action.type)\n    console.log('action.payload : ', action.payload)\n    \n\n    switch (action.type) {\n        case FETCHLIST:\n            return state;\n        case FETCHLIST_SUCCESS:\n            const tempArr = new Array();\n            action.payload.forEach( (cur, idx) => {\n                tempArr.push({\n                    key : idx,\n                    address : cur.address,\n                    chainId : cur.chainId,\n                    createdAt : cur.createdAt,\n                    keyId : cur.keyId,\n                    krn : cur.krn,\n                    publicKey : cur.publicKey\n                }) \n            })            \n            return tempArr;\n\n        case FETCHLIST_ERROR:\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default reducerAccountList;","import React, { useEffect, useState, useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport CaverExtKAS from \"caver-js-ext-kas\"\nimport { Table } from 'antd';\nimport { fetchAccountListAction } from '../reducers/reducerAccountList';\n\nconst columns_table = [\n  {\n    title: 'address',\n    dataIndex: 'address',\n    key: 'address',\n    render: text => <a>{text}</a>,\n    ellipsis: true,\n    width: 100,\n  },\n  {\n    title: 'chainId',\n    dataIndex: 'chainId',\n    key: 'chainId',\n    width: 50,\n  },\n  {\n    title: 'createdAt',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    width: 80,\n  },\n  {\n    title: 'keyId',\n    dataIndex: 'keyId',\n    key: 'keyId',\n    ellipsis: true,\n    width: 100,\n  },\n  {\n    title: 'krn',\n    dataIndex: 'krn',\n    key: 'krn',\n    ellipsis: true,\n    width: 100,\n  },\n  {\n    title: 'publicKey',\n    dataIndex: 'publicKey',\n    key: 'publicKey',\n    ellipsis: true,\n    width: 100,\n  },\n];\n\n// const initialState = [{\n//   key : 0,\n//   address : '',\n//   chainId : '',\n//   createdAt : '',\n//   keyId : '',\n//   krn : '',\n//   publicKey : '',\n// }];\n\nexport default function AccountList() {\n  \n  // const accessKeyId = process.env.REACT_APP_ACCESS_KEY;\n  // const secretAccessKey = process.env.REACT_APP_SECRET_ACCESS_KEY;\n  // const chainId = process.env.REACT_APP_CHAIN_ID;\n  // const caver = new CaverExtKAS()\n\n  const [dataTable, setDataTable] = useState([]);\n  const dataTableRedux = useSelector( state => state.reducerAccountList );\n  const dispatch = useDispatch();\n\n  console.log('dataTableRedux : ', dataTableRedux);\n  // console.log('dataTable : ', dataTable);\n\n  useEffect( () => {\n    dispatch(fetchAccountListAction());\n  }, []);\n\n  // useEffect(() => {\n    // console.log('dataTableRedux in useEffect() : ', dataTableRedux);\n    // setDataTable(dataTableRedux);\n  // },[dataTableRedux]);\n\n  // useEffect(() => {\n  //   tempFunc();\n  // },[]);\n\n  // async function tempFunc() {  \n\n    // console.log(dataTableRedux)\n    // dispatch(fetchAccountListAction())\n    \n    // caver.initKASAPI(chainId, accessKeyId, secretAccessKey)    \n\n    // const query = {\n    //   size: 10,\n    //   //fromTimestamp: 1501970769,\n    //   //toTimestamp: 1601970769,\n    //   //cursor:\n    //     //  'eyJBZGRyZXNzIjoia3JuOjEwMDE6d2FsbGV0OjhlNzZkMDAzLWQ2ZGQtNDI3OC04ZDA1LTUxNzJkOGYwMTBjYTphY2NvdW50LXBvb2w6ZGVmYXVsdDoweDUzM0ZjQzMyMWE4ODgxQzllNEEzNUIzMUJhZWI4MEI1MWE3RDI2OEQiLCJUeXBlIjoiQUNDIiwiY3JlYXRlZF9hdCI6MTYwMTk3MDc2OSwicnBuIjoia3JuOjEwMDE6d2FsbGV0OjhlNzZkMDAzLWQ2ZGQtNDI3OC04ZDA1LTUxNzJkOGYwMTBjYTphY2NvdW50LXBvb2w6ZGVmYXVsdCJ9',\n    // }\n    // const result = await caver.kas.wallet.getAccountList(query)\n    // console.log(\"계정목록 : \");\n    // console.log(result);\n    // console.log(result.items.length);\n\n    // // if(result.items.length >= 1){\n      \n    // // }\n    // let tempVarArr = new Array();\n\n    // result.items.forEach( (el, i) => {\n    //   tempVarArr.push({\n    //     key : i,\n    //     address : el.address,\n    //     chainId : el.chainId,\n    //     createdAt : el.createdAt,\n    //     keyId : el.keyId,\n    //     krn : el.krn,\n    //     publicKey : el.publicKey\n    //   }) \n    // })\n\n    // setDataTable(tempVarArr);    \n  // };\n\n  return (\n    <div>\n      계정목록조회      \n      <Table columns={columns_table} dataSource={dataTableRedux} />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport CaverExtKAS from \"caver-js-ext-kas\"\nimport { Table } from 'antd'\n\n\nconst columns_table = [\n  {\n    title: 'address',\n    dataIndex: 'address',\n    key: 'address',\n    render: text => <a>{text}</a>,\n    ellipsis: true,\n    width: 200,\n  },\n  {\n    title: 'balance',\n    dataIndex: 'balance',\n    key: 'balance',\n    render: text => <a>{text}</a>,\n    // ellipsis: true,\n    width: 50,\n  },\n];\n\nexport default function AccountInfo() {\n  const accessKeyId = process.env.REACT_APP_ACCESS_KEY;\n  const secretAccessKey = process.env.REACT_APP_SECRET_ACCESS_KEY;\n  const chainId = process.env.REACT_APP_CHAIN_ID;\n  const caver = new CaverExtKAS()\n  let tempVarArr2 = new Array();\n  const [dataTable, setDataTable] = useState([]);\n\n  useEffect(() => {\n    tempFunc();\n  },[]);\n\n  // useEffect(() => {\n  //   setDataTable(tempVarArr2);\n  // },[tempVarArr2])\n\n  async function tempFunc() {\n    \n    caver.initKASAPI(chainId, accessKeyId, secretAccessKey)\n\n    const query = {\n      size: 10,    \n    }\n    const result = await caver.kas.wallet.getAccountList(query)\n    let tempVarArr = new Array();\n    \n\n    result.items.forEach( (el, i) => {\n      tempVarArr.push({\n        key : i,\n        address : el.address,        \n      })      \n    })\n\n    \n  //   let chk = tempVarArr.reduce( async (acc, cur, idx) => {\n\n  //     console.log((idx) + \" : \" + cur.address)\n  //     const balanceVal = await caver.rpc.klay.getAccount(cur.address);\n  //     // console.log(balanceVal.account.balance)\n  //     // return balacneVal;\n  //     tempVarArr2.push({\n  //       key : idx,\n  //       address : cur.address,\n  //       balance : (balanceVal !== null && balanceVal.account.balance != null) ? balanceVal.account.balance : '0',\n  //     })\n  //     return balanceVal;\n  //   }, 0).then( returnVal => { \n  //     console.log(\"promiseVal : \", returnVal);\n  //     setDataTable(tempVarArr2);  \n  //  })\n\n    let promiseReturn = tempVarArr.forEach( async (el, idx) => {\n      // console.log('idx : ', idx, '/ length : ', tempVarArr.length-1)\n      const balanceVal = await caver.rpc.klay.getAccount(el.address);\n      tempVarArr2.push({\n        key : idx,\n        address : el.address,\n        balance : (balanceVal !== null && balanceVal.account.balance != null) ? balanceVal.account.balance : '0',\n      });\n      \n      if(tempVarArr.length == tempVarArr2.length){  // 비동기 호출에 따른 처리\n        setDataTable(tempVarArr2)        \n      }      \n    })\n\n  }\n\n  return (\n    <div>\n      계정정보조회\n      <Table columns={columns_table} dataSource={dataTable} />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Row, Col, Form, Input, Button, Typography, Table } from 'antd';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport CaverExtKAS from \"caver-js-ext-kas\"\n\nconst columns_table = [\n  {\n    title: 'from',\n    dataIndex: 'from',\n    key: 'from',    \n    width: 100,\n    ellipsis: true,\n  },\n  {\n    title: 'to',\n    dataIndex: 'to',\n    key: 'to',    \n    ellipsis: true,\n    width: 100,\n  },\n  {\n    title: 'gas',\n    dataIndex: 'gas',\n    key: 'gas',    \n    ellipsis: true,\n    width: 100,\n  },\n  {\n    title: 'gasPrice',\n    dataIndex: 'gasPrice',\n    key: 'gasPrice',    \n    ellipsis: true,\n    width: 100,\n  },\n  {\n    title: 'nonce',\n    dataIndex: 'nonce',\n    key: 'nonce',    \n    width: 10,\n  },\n  {\n    title: 'status',\n    dataIndex: 'status',\n    key: 'status',    \n    ellipsis: true,\n    width: 100,\n  },\n  {\n    title: 'transactionHash',\n    dataIndex: 'transactionHash',\n    key: 'transactionHash', \n    ellipsis: true,\n    width: 100,\n  },\n];\n\nexport default function ValueTransfer() {\n\n  const accessKeyId = process.env.REACT_APP_ACCESS_KEY;\n  const secretAccessKey = process.env.REACT_APP_SECRET_ACCESS_KEY;\n  const chainId = process.env.REACT_APP_CHAIN_ID;\n  const caver = new CaverExtKAS()\n\n  const history = useHistory();\n\n  const [dataTable, setDataTable] = useState([]);\n  const [tempData, setTempData] = useState({\n    from:'',\n    to:'',\n    value:'',\n    gas:'',\n    gasPrice: '',\n    nonce: '',\n    transactionHash:'',\n    });\n\n  const onFinish = async (values) => {\n    console.log(values)\n    caver.initKASAPI(chainId, accessKeyId, secretAccessKey)\n\n    const tx = {\n      from : values.fromAddress,\n      to : values.toAddress,\n      value : values.klayValue,\n      submit : true\n    }\n    \n    console.log('tx : ', tx)\n\n    const result = await caver.kas.wallet.requestValueTransfer(tx);\n\n    console.log('result : ', result)\n\n    // setTimeout(() => {\n    //   history.push('/main/AccountInfo');\n    // }, 1000)\n    setTempData({\n      from: result.from,\n      to: result.to,\n      value: result.value,\n      gas: result.gas,\n      gasPrice: result.gasPrice,\n      nonce: result.nonce,\n      transactionHash: result.transactionHash,\n    });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (          \n      <div className=\"Transfer\">\n        KLAY 전송  <br />\n        <Typography.Text> 계정정보조회 메뉴에서 KLAY 가 있는 주소를 사용하세요!! </Typography.Text>\n      <Row align=\"middle\" className=\"transfer-form\">\n\n        <Col span={9} offset={1}>\n          <Form\n            name=\"klay_transfer\"\n            className=\"login-form\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Typography.Text> From </Typography.Text>\n            <Form.Item\n              name=\"fromAddress\"\n              rules={[\n                {\n                  required: true,\n                  message: '전송자의 주소를 넣어주세요',\n                },\n              ]}\n            >\n              <Input  placeholder=\"전송자 주소\" />\n            </Form.Item>\n            <Typography.Text> To </Typography.Text>\n            <Form.Item\n              name=\"toAddress\"\n              rules={[\n                {\n                  required: true,\n                  message: '전송받을자의 주소를 넣어주세요',\n                },\n              ]}\n            >               \n              <Input                           \n                placeholder=\"전송받을 주소\"\n              />\n            </Form.Item>\n            <Typography.Text> 전송금액 </Typography.Text>\n            <Form.Item\n              name=\"klayValue\"\n              rules={[\n                {\n                  required: true,\n                  message: '전송할 금액을 넣어주세요!',\n                },\n              ]}\n            >               \n              <Input                               \n                placeholder=\"KLAY 금액\"\n              />\n            </Form.Item>\n\n            \n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                전송\n              </Button>             \n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={9} offset={1}>\n          <Typography.Text mark>  출력부분 </Typography.Text> <br/>\n          <Typography.Text> From : {tempData.from} </Typography.Text><br/>\n          <Typography.Text> To : {tempData.to} </Typography.Text><br/>\n          <Typography.Text> Value : {tempData.value} </Typography.Text><br/>\n          <Typography.Text> gas : {tempData.gas} </Typography.Text><br/>\n          <Typography.Text> gasPrice : {tempData.gasPrice} </Typography.Text><br/>\n          <Typography.Text> Nonce : {tempData.nonce} </Typography.Text><br/>\n          <Typography.Text> transactionHash : {tempData.transactionHash} </Typography.Text>\n        </Col>\n      </Row>    \n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/klaytn.414c3fea.svg\";","import React, { useEffect, useState } from 'react';\nimport { Layout, Menu, Spin, Col, Row } from 'antd';\nimport Icon, {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n  LoadingOutlined,\n  DownOutlined,\n  BarsOutlined,\n  BankOutlined,\n  AccountBookOutlined\n} from '@ant-design/icons';\nimport { Switch, Route, Redirect, Link, useHistory } from \"react-router-dom\";\n\nimport { getItem } from \"../services/local-storage\";\n\nimport AccountList from '../containers/AccountList';\nimport AccountInfo from '../containers/AccountInfo';\nimport ValueTransfer from '../containers/ValueTransfer';\n// import Contact from '../containers/Contact';\n\nimport logoSvg from './klaytn.svg';\n\nconst { Header, Sider, Content, Footer } = Layout;\n\nexport default function Auth() {\n\n  const [user] = useState(JSON.parse(getItem('user')));\n  const [collapsed, setCollapsed] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) {\n      history.replace('/auth/login');\n    }\n  }, [user, history]);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const renderLayout = () => {\n    return <Layout>\n      <Header>\n        <Row  align=\"middle\" justify=\"space-between\" gutter={[16,10]}>        \n          <Col span={2} offset={1}  xl={{ span: 2, offset: 2 }}>\n            <img src={logoSvg} alt=\"klaytn Logo\" width={50} style={{border:\"2px solid white\"}}/>\n          </Col>\n          <Col span={2} offset={10}  xl={{ span: 2, offset: 12 }}>          \n            <Row type=\"flex\" align=\"middle\" justify=\"center\">\n              <Icon component={UserOutlined} style={{border:\"2px solid white\"}} height={100}/>\n            </Row>\n          </Col>\n        </Row >        \n      </Header>\n      \n      <Layout className=\"site-layout\">\n        <Sider trigger={null} collapsible collapsed={collapsed}>\n          <div className='side-menu'>Wallet Service <Icon component={DownOutlined} /> </div>\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\" icon={<BarsOutlined />}>\n              <Link to=\"/main/AccountList\">계정목록조회</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<BankOutlined />}>\n              <Link to=\"/main/AccountInfo\">계정정보조회</Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<AccountBookOutlined />}>\n              <Link to=\"/main/ValueTransfer\">KLAY 전송</Link>\n            </Menu.Item>            \n          </Menu>\n        </Sider>\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n            className: 'trigger',\n            onClick: toggle,\n          })}\n        </Header>\n        \n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '24px 16px',\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          <Switch>\n            <Route path=\"/main/AccountList\" component={AccountList} />\n            <Route path=\"/main/AccountInfo\" component={AccountInfo} />\n            <Route path=\"/main/ValueTransfer\" component={ValueTransfer} />            \n            <Redirect to=\"/main\" />\n          </Switch>\n        </Content>\n        \n      </Layout>\n      <Footer />\n    </Layout>\n  }\n  const renderLoading = () => {\n    return <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n  }\n  return (\n    <div className=\"main-container\">\n      {\n        user\n          ? renderLayout()\n          : renderLoading()\n      }\n\n    </div>\n  );\n\n}","import './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Auth from \"./auth/Auth\";\nimport Main from './main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/main\" component={Main} />\n          <Redirect to=\"/main\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { all, fork } from 'redux-saga/effects';\nimport reducerAccountList from './reducerAccountList';\nimport { fetchAccountListSaga } from './reducerAccountList';\n\nconst rootReducer = combineReducers({\n    reducerAccountList,\n});\n\nexport function* rootSaga() {\n    yield all([fetchAccountListSaga()]); // all 은 배열 안의 사가를 동시에 실행\n    //  yield [fetchAccountListSaga()];\n}\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport rootReducer, { rootSaga } from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { fetchAccountListSaga } from './reducers/reducerAccountList'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reduxLogger = createLogger();\nconst store = createStore(\n  rootReducer, \n  composeWithDevTools(\n    applyMiddleware(      \n      reduxLogger,\n      sagaMiddleware,\n    )\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n// sagaMiddleware.run(fetchAccountListSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}